// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RatingService.Data;

#nullable disable

namespace PurchaseService.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240306221317_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseService.Entities.Buyer", b =>
                {
                    b.Property<Guid>("buyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buyerId");

                    b.ToTable("Buyer");

                    b.HasData(
                        new
                        {
                            buyerId = new Guid("0c4429d7-205e-4f20-918a-8ffd4052f355"),
                            email = "buyer1@gmail.com",
                            username = "Buyer1"
                        });
                });

            modelBuilder.Entity("PurchaseService.Entities.Delivery", b =>
                {
                    b.Property<Guid>("deliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("deliveryId");

                    b.ToTable("Delivery");

                    b.HasData(
                        new
                        {
                            deliveryId = new Guid("2317fb31-0bbc-4e46-a800-16ee6dda0fc6"),
                            price = 3
                        });
                });

            modelBuilder.Entity("PurchaseService.Entities.Post", b =>
                {
                    b.Property<Guid>("postId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<Guid>("ownerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ownerUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            postId = new Guid("2fb69455-e054-462c-bc05-7b22aba2514f"),
                            date = new DateOnly(2015, 10, 21),
                            ownerId = new Guid("6bfdfeff-6655-46dd-8bcb-14dea3fadb51"),
                            ownerUsername = "OwnerUsername",
                            title = "Post1Title"
                        });
                });

            modelBuilder.Entity("PurchaseService.Entities.Purchase", b =>
                {
                    b.Property<Guid>("purchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("buyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<Guid>("deliveryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("postId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("purchaseId");

                    b.ToTable("Purchase");

                    b.HasData(
                        new
                        {
                            purchaseId = new Guid("e009aa98-d0fa-4d92-8c05-de089de7e413"),
                            buyerId = new Guid("0c4429d7-205e-4f20-918a-8ffd4052f355"),
                            date = new DateOnly(2015, 10, 21),
                            deliveryId = new Guid("2317fb31-0bbc-4e46-a800-16ee6dda0fc6"),
                            postId = new Guid("2fb69455-e054-462c-bc05-7b22aba2514f"),
                            price = 100
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
