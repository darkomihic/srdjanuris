// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RatingService.Data;

#nullable disable

namespace RatingService.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240304170900_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RatingService.Entities.Buyer", b =>
                {
                    b.Property<Guid>("buyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buyerId");

                    b.ToTable("Buyer");

                    b.HasData(
                        new
                        {
                            buyerId = new Guid("2c1c1ebf-d97b-4e00-a923-1ac5501de37e"),
                            email = "buyer1@gmail.com",
                            username = "Buyer 1"
                        });
                });

            modelBuilder.Entity("RatingService.Entities.Purchase", b =>
                {
                    b.Property<Guid>("purchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("purchaseId");

                    b.ToTable("Purchase");

                    b.HasData(
                        new
                        {
                            purchaseId = new Guid("c731cb1a-c9de-42cc-81c7-ef0f9e19f852"),
                            date = new DateOnly(2015, 10, 21),
                            price = 100
                        });
                });

            modelBuilder.Entity("RatingService.Entities.Rating", b =>
                {
                    b.Property<Guid>("ratingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ratingId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            ratingId = new Guid("f3e51e2d-1c1f-4e98-98fa-b099e90ce0a2"),
                            comment = "Comment1",
                            date = new DateOnly(2015, 10, 21),
                            grade = 5,
                            title = "Title1"
                        });
                });

            modelBuilder.Entity("RatingService.Entities.Seller", b =>
                {
                    b.Property<Guid>("sellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sellerId");

                    b.ToTable("Seller");

                    b.HasData(
                        new
                        {
                            sellerId = new Guid("34a88e70-ed89-410a-ab1e-a9f35a9de5a2"),
                            email = "seller1@gmail.com",
                            username = "Seller1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
